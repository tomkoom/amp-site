type TransferError = 
 variant {
   BadBurn: record {min_burn_amount: nat;};
   BadFee: record {expected_fee: nat;};
   CreatedInFuture: record {ledger_time: nat64;};
   Duplicate: record {duplicate_of: nat;};
   GenericError: record {
                   error_code: nat;
                   message: text;
                 };
   InsufficientFunds: record {balance: nat;};
   TemporarilyUnavailable;
   TooOld;
 };
type Result = 
 variant {
   Err: TransferError;
   Ok: nat;
 };
type DiscordUserId = text;
service : {
  claim: (DiscordUserId, text, text) -> (opt Result);
  claimedOg1UsersNum: () -> (text) query;
  claimedOg2UsersNum: () -> (text) query;
}
